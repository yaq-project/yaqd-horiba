protocol = "horiba-ihr320"
doc = "Horiba Jobin-Yvon Micro-Hr monochromator."
traits = ["has-turret", "is-homeable", "has-limits", "is-daemon"]
hardware = ["horiba:ihr320"]

[[types]]

type = "enum"
name = "mirror_setting"
symbols = ["front", "side"]

[[types]]
type = "record"
name = "horiba_grating"
fields = [
    {"name"="index", "type"="int", "default"=0},
    {"name"="lines_per_mm", "type"="float", "default"=1200.0},
]


[links]
source = "https://github.com/yaq-project/yaqd-horiba"
bugtracker = "https://github.com/yaq-project/yaqd-horiba/issues"
manufacturer = "https://www.horiba.com/en_en/products/detail/action/show/Product/ihr-series-1590/"

[installation]
PyPI = "https://pypi.org/project/yaqd-horiba/"
conda-forge = "https://anaconda.org/conda-forge/yaqd-horiba/"

[config]
gratings.type = {"type"="map", "values"="horiba_grating"}
gratings.default = {"default"={}}
gratings.doc = "Map which gives a label to a grating with its lines/mm and index"

make.default = "Horiba Jobin-Yvon"
model.default = "IHR320"

[state]

mirrors.type = {"type"="array", "items"="mirror_setting"}
mirrors.default = ["front", "front"]
mirrors.doc = "Position of the mirror, entrance then exit."

slits.type = {"type"="array", "items"="float"}
slits.default = [0.0, 0.0, 0.0, 0.0]
slits.doc = "Width of each slit in mm. order is Front Entrance, Side Entrance, Front Exit, Side Exit"

mirrors_dest.type = {"type"="array", "items"="mirror_setting"}
mirrors_dest.default = ["front", "front"]
mirrors_dest.doc = "Destination of the mirror, entrance, then exit"

slits_dest.type = {"type"="array", "items"="float"}
slits_dest.default = [0.0, 0.0, 0.0, 0.0]
slits_dest.doc = "Destination of each slit in mm. order is Front Entrance, Side Entrance, Front Exit, Side Exit"


[messages]
get_front_entrance_slit.response = "double"
get_front_exit_slit.response = "double"
get_side_entrance_slit.response = "double"
get_side_exit_slit.response = "double"

set_front_entrance_slit.request = [{"name"= "width", "type"= "double", "doc"= "width in mm"}]
set_front_exit_slit.request = [{"name"= "width", "type"= "double", "doc"= "width in mm"}]
set_side_entrance_slit.request = [{"name"= "width", "type"= "double", "doc"= "width in mm"}]
set_side_exit_slit.request = [{"name"= "width", "type"= "double", "doc"= "width in mm"}]

get_slit_units.response = "string"
get_slit_limits.response = {"type"="array", "items"="double"}

get_entrance_mirror.response = "mirror_setting"
get_exit_mirror.response = "mirror_setting"

set_entrance_mirror.request = [{"name"= "side", "type"= "mirror_setting"}]
set_exit_mirror.request = [{"name"= "side", "type"= "mirror_setting"}]

[properties]

[properties.front_entrance_slit]
getter = "get_front_entrance_slit"
setter = "set_front_entrance_slit"
units_getter = "get_slit_units"
limits_getter = "get_slit_limits"
control_kind = "normal"
record_kind = "metadata"
type = "double"

[properties.side_entrance_slit]
getter = "get_side_entrance_slit"
setter = "set_side_entrance_slit"
units_getter = "get_slit_units"
limits_getter = "get_slit_limits"
control_kind = "normal"
record_kind = "metadata"
type = "double"

[properties.front_exit_slit]
getter = "get_front_exit_slit"
setter = "set_front_exit_slit"
units_getter = "get_slit_units"
limits_getter = "get_slit_limits"
control_kind = "normal"
record_kind = "metadata"
type = "double"

[properties.side_exit_slit]
getter = "get_side_exit_slit"
setter = "set_side_exit_slit"
units_getter = "get_slit_units"
limits_getter = "get_slit_limits"
control_kind = "normal"
record_kind = "metadata"
type = "double"

[properties.entrance_mirror]
getter = "get_entrance_mirror"
setter = "set_entrance_mirror"
control_kind = "normal"
record_kind = "metadata"
type = "mirror_setting"

[properties.exit_mirror]
getter = "get_exit_mirror"
setter = "set_exit_mirror"
control_kind = "normal"
record_kind = "metadata"
type = "mirror_setting"
